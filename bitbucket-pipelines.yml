#  Template .NET Core build

#  This template allows you to validate your .NET Core package.
#  The workflow allows running tests and code linting on the default branch.

image: mcr.microsoft.com/dotnet/core/sdk:3.1

pipelines:
  branches:
    master:
      - step:
          name: Deploy backend
          caches:
            - dotnetcore
          deployment: production
          script:
            - apt-get update && apt-get install -y zip 
            - dotnet tool install --global dotnet-ef
            - cd backend/LetsMeatAPI
            - dotnet restore
            - dotnet build --no-restore --configuration Release
            - dotnet ef database update 0 --connection "${LETS_MEAT_DB_CONNECTION_STRING}" --configuration Release --no-build
            - dotnet ef database update --connection "${LETS_MEAT_DB_CONNECTION_STRING}" --configuration Release --no-build
            - dotnet publish --no-restore --no-build --configuration Release
            - cd bin/Release/netcoreapp3.1/publish/
            - zip -r ../letsmeatapi.zip *
            - cd ..
            - curl -u wreplin:${AZURE_DEPLOYMENT_PASSWORD} --data-binary @letsmeatapi.zip https://letsmeatapi.scm.azurewebsites.net/api/zipdeploy
          condition:
            changesets:
              includePaths:
                - backend/LetsMeatAPI/**
  default:
    - parallel:
        - step:
            name: Build and Test backend
            caches:
              - dotnetcore
            script:
              - cd backend/LetsMeatAPITests
              - dotnet restore
              - dotnet build --no-restore --configuration Release
              - dotnet test --no-build --configuration Release --verbosity normal
            condition:
              changesets:
                includePaths:
                  - backend/**
